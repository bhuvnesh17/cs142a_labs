ast.DeclarationList(3,1)
  ast.FunctionDefinition(3,1)[Symbol(foo), []]
    ast.StatementList(4,3)
      ast.Call(4,3)[Symbol(printInt)]
        ast.ExpressionList(4,14)
          ast.LiteralInt(4,14)[5]
  ast.ArrayDeclaration(7,1)[Symbol(myarray)]
  ast.VariableDeclaration(8,1)[Symbol(myvar)]
  ast.VariableDeclaration(10,1)[Symbol(i)]
  ast.VariableDeclaration(11,1)[Symbol(j)]
  ast.VariableDeclaration(12,1)[Symbol(k)]
  ast.FunctionDefinition(14,1)[Symbol(foo2), []]
    ast.StatementList(15,3)
      ast.Call(15,3)[Symbol(printInt)]
        ast.ExpressionList(15,14)
          ast.Addition(15,15)
            ast.Dereference(15,14)
              ast.AddressOf(15,14)[i]
            ast.Dereference(15,16)
              ast.AddressOf(15,16)[j]
      ast.Call(16,3)[Symbol(printInt)]
        ast.ExpressionList(16,14)
          ast.Subtraction(16,15)
            ast.Dereference(16,14)
              ast.AddressOf(16,14)[j]
            ast.Dereference(16,16)
              ast.AddressOf(16,16)[i]
      ast.Call(17,3)[Symbol(printInt)]
        ast.ExpressionList(17,14)
          ast.Division(17,15)
            ast.Dereference(17,14)
              ast.AddressOf(17,14)[j]
            ast.Dereference(17,16)
              ast.AddressOf(17,16)[i]
      ast.Call(18,3)[Symbol(printInt)]
        ast.ExpressionList(18,14)
          ast.Multiplication(18,15)
            ast.Dereference(18,14)
              ast.AddressOf(18,14)[j]
            ast.Dereference(18,16)
              ast.AddressOf(18,16)[i]
      ast.Call(19,3)[Symbol(printInt)]
        ast.ExpressionList(19,15)
          ast.Subtraction(19,21)
            ast.Addition(19,17)
              ast.LiteralInt(19,15)[1]
              ast.LiteralInt(19,19)[2]
            ast.Multiplication(19,33)
              ast.Division(19,29)
                ast.Multiplication(19,25)
                  ast.LiteralInt(19,23)[3]
                  ast.LiteralInt(19,27)[5]
                ast.LiteralInt(19,31)[6]
              ast.Subtraction(19,37)
                ast.LiteralInt(19,36)[7]
                ast.LiteralInt(19,38)[8]
  ast.FunctionDefinition(22,1)[Symbol(main1), []]
    ast.StatementList(23,3)
      ast.VariableDeclaration(23,3)[Symbol(b)]
      ast.Call(24,3)[Symbol(printBool)]
        ast.ExpressionList(24,15)
          ast.LogicalAnd(24,17)
            ast.Dereference(24,15)
              ast.AddressOf(24,15)[i]
            ast.Dereference(24,21)
              ast.AddressOf(24,21)[j]
      ast.Call(25,3)[Symbol(printBool)]
        ast.ExpressionList(25,15)
          ast.LogicalOr(25,17)
            ast.Dereference(25,15)
              ast.AddressOf(25,15)[i]
            ast.Dereference(25,20)
              ast.AddressOf(25,20)[j]
      ast.Call(26,3)[Symbol(printBool)]
        ast.ExpressionList(26,15)
          ast.LogicalAnd(26,21)
            ast.LogicalNot(26,15)
              ast.Dereference(26,19)
                ast.AddressOf(26,19)[i]
            ast.Dereference(26,25)
              ast.AddressOf(26,25)[j]
      ast.Call(27,3)[Symbol(printBool)]
        ast.ExpressionList(27,15)
          ast.LogicalOr(27,27)
            ast.LogicalAnd(27,17)
              ast.Dereference(27,15)
                ast.AddressOf(27,15)[i]
              ast.LogicalNot(27,21)
                ast.Dereference(27,25)
                  ast.AddressOf(27,25)[j]
            ast.Dereference(27,30)
              ast.AddressOf(27,30)[k]
      ast.Call(28,3)[Symbol(printBool)]
        ast.ExpressionList(28,15)
          ast.LogicalOr(28,23)
            ast.LogicalAnd(28,17)
              ast.Dereference(28,15)
                ast.AddressOf(28,15)[i]
              ast.Dereference(28,21)
                ast.AddressOf(28,21)[j]
            ast.LogicalNot(28,26)
              ast.Dereference(28,30)
                ast.AddressOf(28,30)[k]
      ast.Assignment(29,3)
        ast.AddressOf(29,7)[b]
        ast.LogicalOr(29,27)
          ast.LogicalAnd(29,17)
            ast.LogicalNot(29,11)
              ast.Dereference(29,15)
                ast.AddressOf(29,15)[i]
            ast.LogicalNot(29,21)
              ast.Dereference(29,25)
                ast.AddressOf(29,25)[j]
          ast.LogicalAnd(29,36)
            ast.LogicalNot(29,30)
              ast.Dereference(29,34)
                ast.AddressOf(29,34)[k]
            ast.LogicalNot(29,40)
              ast.LogicalNot(29,44)
                ast.LogicalNot(29,48)
                  ast.LogicalNot(29,52)
                    ast.Dereference(29,56)
                      ast.AddressOf(29,56)[k]
  ast.ArrayDeclaration(32,1)[Symbol(test_array)]
  ast.FunctionDefinition(33,1)[Symbol(test_array_access), []]
    ast.StatementList(34,3)
      ast.WhileLoop(34,3)
        ast.LiteralBool(34,10)[TRUE]
        ast.StatementList(35,5)
          ast.VariableDeclaration(35,5)[Symbol(i)]
          ast.WhileLoop(36,5)
            ast.LiteralBool(36,11)[FALSE]
            ast.StatementList(37,7)
              ast.VariableDeclaration(37,7)[Symbol(j)]
              ast.WhileLoop(38,7)
                ast.LiteralBool(38,14)[TRUE]
                ast.StatementList(39,9)
                  ast.VariableDeclaration(39,9)[Symbol(k)]
                  ast.Assignment(40,9)
                    ast.Index(40,30)
                      ast.Index(40,27)
                        ast.Index(40,24)
                          ast.AddressOf(40,13)[test_array]
                          ast.Dereference(40,24)
                            ast.AddressOf(40,24)[i]
                        ast.Dereference(40,27)
                          ast.AddressOf(40,27)[j]
                      ast.Dereference(40,30)
                        ast.AddressOf(40,30)[k]
                    ast.Multiplication(40,41)
                      ast.Multiplication(40,37)
                        ast.Dereference(40,35)
                          ast.AddressOf(40,35)[i]
                        ast.Dereference(40,39)
                          ast.AddressOf(40,39)[j]
                      ast.Dereference(40,43)
                        ast.AddressOf(40,43)[k]
                  ast.Assignment(41,9)
                    ast.Index(41,66)
                      ast.Index(41,45)
                        ast.Index(41,24)
                          ast.AddressOf(41,13)[test_array]
                          ast.Dereference(41,24)
                            ast.Index(41,41)
                              ast.Index(41,38)
                                ast.Index(41,35)
                                  ast.AddressOf(41,24)[test_array]
                                  ast.LiteralInt(41,35)[9]
                                ast.LiteralInt(41,38)[0]
                              ast.LiteralInt(41,41)[3]
                        ast.Dereference(41,45)
                          ast.Index(41,62)
                            ast.Index(41,59)
                              ast.Index(41,56)
                                ast.AddressOf(41,45)[test_array]
                                ast.LiteralInt(41,56)[8]
                              ast.LiteralInt(41,59)[2]
                            ast.LiteralInt(41,62)[4]
                      ast.Dereference(41,66)
                        ast.Index(41,83)
                          ast.Index(41,80)
                            ast.Index(41,77)
                              ast.AddressOf(41,66)[test_array]
                              ast.LiteralInt(41,77)[1]
                            ast.LiteralInt(41,80)[5]
                          ast.LiteralInt(41,83)[7]
                    ast.Addition(41,91)
                      ast.Dereference(41,89)
                        ast.AddressOf(41,89)[i]
                      ast.Multiplication(41,95)
                        ast.Dereference(41,93)
                          ast.AddressOf(41,93)[j]
                        ast.Dereference(41,97)
                          ast.AddressOf(41,97)[k]
      ast.Assignment(45,3)
        ast.Index(45,25)
          ast.Index(45,21)
            ast.Index(45,18)
              ast.AddressOf(45,7)[test_array]
              ast.LiteralInt(45,18)[7]
            ast.LiteralInt(45,21)[10]
          ast.LiteralInt(45,25)[11]
        ast.Dereference(45,31)
          ast.Index(45,52)
            ast.Index(45,47)
              ast.Index(45,42)
                ast.AddressOf(45,31)[test_array]
                ast.LiteralInt(45,42)[234]
              ast.LiteralInt(45,47)[324]
            ast.LiteralInt(45,52)[423]
  ast.FunctionDefinition(50,1)[Symbol(main), []]
    ast.StatementList(51,3)
      ast.Call(51,3)[Symbol(foo)]
        ast.ExpressionList(51,9)
      ast.Call(52,3)[Symbol(main1)]
        ast.ExpressionList(52,11)

